// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project f667fc580d8d9346 "ApiFlow (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Closed' | 'Open' | 'Preview - Mobile' // Variant
 * linkText?: string // Link text
 * link?: string // Link
 * name?: string // Name
 * username?: string // Username
 * verified?: boolean // Verified
 * profilePicture?: {src: string, srcSet?: string, alt?: string} // Profile picture
 * bioPlain?: string // Bio-plain
}} Props

 */
import { stdin_default } from "../chunks/chunk-DHCVI6LL.js";
import "../chunks/chunk-3IMWMF2U.js";
import { routes } from "../chunks/chunk-6OPQGIC3.js";
import "../chunks/chunk-WSFCRVEQ.js";

// virtual:navigation/twitter-profile-preview
import { Fragment } from "react";
import { ContextProviders } from "unframer";
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "I7okyouAe",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"f667fc580d8d9346cf49d633d75940b95292fa43c24dd7765c9a175ec73f7405"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders TwitterProfilePreviewFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"f667fc580d8d9346cf49d633d75940b95292fa43c24dd7765c9a175ec73f7405"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var twitter_profile_preview_default = ComponentWithRoot;
export { twitter_profile_preview_default as default };
