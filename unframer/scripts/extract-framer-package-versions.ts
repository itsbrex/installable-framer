import fs from 'node:fs'
import path from 'node:path'

// Read the importmap file
const importmapPath = path.join(import.meta.dir, 'framer-importmaps.json')
const importmap = JSON.parse(fs.readFileSync(importmapPath, 'utf8'))

// Extract versions using regex
const framerPackageVersions: Record<string, string> = {}

for (const [packageName, url] of Object.entries(importmap.imports)) {
  // Extract version from URL like https://esm.sh/*package-name@1.2.3/...
  const versionMatch = url.match(/@([0-9]+\.[0-9]+\.[0-9]+(?:-[a-zA-Z0-9.-]+)?)/)
  
  if (versionMatch) {
    framerPackageVersions[packageName] = versionMatch[1]
  }
}

// Write the TypeScript file
const outputPath = path.join(import.meta.dir, '../src/framer-package-versions.ts')
const outputContent = `// Auto-generated by scripts/extract-framer-package-versions.ts
// Do not edit manually

export const framerPackageVersions = ${JSON.stringify(framerPackageVersions, null, 2)} as const

export type FramerPackageName = keyof typeof framerPackageVersions
`

fs.writeFileSync(outputPath, outputContent)

console.log(`âœ… Generated ${outputPath} with ${Object.keys(framerPackageVersions).length} package versions`)