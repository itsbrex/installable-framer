// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 080b0b6d577bdc21 "Unframer Simplicity demo", do not edit manually */
// /:https://framerusercontent.com/modules/ZnkNF4cDwL1LICjl8Dfv/5nWLUyvpsR6msRPVbEV5/pRkZD_P47-2.js
import { jsx as e, jsxs as t } from "react/jsx-runtime";
import * as n from "react";
var richText = /* @__PURE__ */ t(n.Fragment, { children: [/* @__PURE__ */ e("h2", { children: "Editing Content" }), /* @__PURE__ */ e("p", { children: "You can choose to set up different types of input fields depending on your content. For instance, a blog might have a title, a slug, and a long-form field for formatted content. These may be different for a product directory or a photo blog, where you may need to add an image field. To edit the fields each CMS item will have, click on any of the column titles. This will trigger a modal to add new fields, where you can also re-arrange the fields or modify or delete the existing ones." }), /* @__PURE__ */ e("h2", { children: "Adding Content to the Canvas" }), /* @__PURE__ */ e("p", { children: "After setting up the content, go back to the canvas. Your collections are accessible from the Insert menu. Open the Insert menu, navigate to the CMS Content section, and drag and drop your collection onto the canvas. This will add a special stack with layers connected to your data. From here, you can edit the visual properties on the right, just as you would do with a regular Stack." }), /* @__PURE__ */ e("h2", { children: "Add a Page with Content" }), /* @__PURE__ */ t("p", { children: ["If you wish to add a page instead that will automatically be populated with data from the CMS, navigate to the left panel. One you are in the ", /* @__PURE__ */ e("strong", { children: "Pages" }), " tab, click on the ", /* @__PURE__ */ e("code", { children: "+" }), " button next to the CMS section. If you add the ", /* @__PURE__ */ e("strong", { children: "Index" }), " page, a page will be added with a list of all of the items in your collection. If you add the ", /* @__PURE__ */ e("strong", { children: "Detail" }), " page, you will be presented with a page with content from your individual items."] }), /* @__PURE__ */ t("p", { children: [/* @__PURE__ */ e("strong", { children: "Note" }), ": If you chose to add the sample data, a new detail page called ", /* @__PURE__ */ e("code", { children: "/blog" }), " will be added to your website, and you will find the stack of content added into the page for you."] }), /* @__PURE__ */ e("p", { children: "The detail page will display content pulled from the first entry of the collection by default. In order to preview other items in the collection, change the content by selecting a different item from the dropdown menu." })] });
var richText1 = /* @__PURE__ */ t(n.Fragment, { children: [/* @__PURE__ */ e("h2", { children: "Reference Fields" }), /* @__PURE__ */ e("p", { children: "To add Pagination, select your Collection List, click on Pagination, select one of the two options, then pick how many items to load. Pagination also works with existing Limits and Start Offsets. Both the Spinner and Button are completely customizable, and you can pick any Variant for their Loading states. The Spinner itself is just a layer with a conic gradient and a Loop Effect, so you get full control. Adding Pagination helps make your blogs and changelogs much faster to load, especially when they contain dozens of items." }), /* @__PURE__ */ t("ul", { children: [/* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "Infinite Scrolling with custom Spinner component" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "Load More Button with custom Button component" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "Enjoy freeform positioning of both components" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "Design your own Loading and Hidden states" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "Make your CMS Pages much faster to load" }) })] }), /* @__PURE__ */ e("h2", { children: "Filtering" }), /* @__PURE__ */ e("p", { children: "We've added the ability to filter your collection lists in the CMS. This allows you to keep your content in a single collection, yet customize how that collection is presented on each of your web pages. For example, if you're creating docs for your app, you might want to filter articles per topic on your homepage. Or when creating a blog, you might want to filter your blog posts per category." })] });
var richText2 = /* @__PURE__ */ t(n.Fragment, { children: [/* @__PURE__ */ e("h2", { children: "New This Month" }), /* @__PURE__ */ e("p", { children: "This quality update brings canvas and layer panel improvements. We've updated the Component symbol throughout the app to differentiate it from Grids. Plus, we've made Primary Breakpoints and Variants more distinct in the left panel, making it easier to see if you're editing the primary or an instance. Breakpoints will now also show the ranges in the layer panel. See more updates below." }), /* @__PURE__ */ e("h2", { children: "From January" }), /* @__PURE__ */ e("p", { children: "Last month, we added support for automatic tinting and new layout options for components, plus a whole lot of fixes and improvements. If you give your Page a Fill color, this will now also tint browsers like Safari and will ensure you don't get plain white backgrounds when overscrolling on any mobile device. Plus, we've added support for Min Max sizing to all Smart and Code components, greatly simplifying many common layouts and patterns. See the full changelog below." }), /* @__PURE__ */ t("ul", { children: [/* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "We automatically set the body background, based on your Page's fill color" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "You can now override the body background and customize per breakpoint" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "We now support Min Max sizing for all Smart and Code Component" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "We now consistently show the Min Max hint within the property panel" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "You can now use all alignment options for layers with Position set to Fixed" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "We now inform you if a parent layer height changes due to layout edits" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "We improved the Radius and Padding controls, no longer resetting values" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "Number inputs split in four no longer show steppers, so longer values fit" }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: "We improved Appear Effects using Scale with Spring transitions" }) })] })] });
var richText3 = /* @__PURE__ */ t(n.Fragment, { children: [/* @__PURE__ */ e("h2", { children: "Prepare your CSV file" }), /* @__PURE__ */ e("p", { children: `Make sure your file is exported as a "CSV" file, also known as a "Comma Separated Values" file. If you encounter any issues you'll want to verify your file is UTF-8 encoded and less than 5mb. If your file is larger than that, try removing columns you may not need. See below for additional information on specific fields.` }), /* @__PURE__ */ e("p", { children: /* @__PURE__ */ e("em", { children: "Tip: You do not have to import every column from your CSV. Only fields set up in your CMS collection in the next step will be imported." }) }), /* @__PURE__ */ e("h3", { children: "Rich Text Fields" }), /* @__PURE__ */ e("p", { children: "Formatted text content needs to be formatted as HTML. Many tags are supported, such as paragraphs and headers <p>,<h1>, <h2>), formatting (<em>, <i>, <strong>), links (<a>), lists (<ol>, <ul>, <li>) and images (<img>). Images from URLs will be automatically downloaded from their original source and imported into Framer." }), /* @__PURE__ */ e("h3", { children: "Image Fields" }), /* @__PURE__ */ e("p", { children: "Images in your CSV content must be URLs to an image. They will be downloaded and imported into Framer. Relative paths are not supported." }), /* @__PURE__ */ e("h3", { children: "Date Fields" }), /* @__PURE__ */ e("p", { children: "Recommended format is ISO8601 compliant, for example: 2023-12-17T14:42:00. The shorthand value of year-month-day is also supported, for example: 1982-12-01. Long format strings may work, but will depend on your browser, for example: Tue May 12 2020 18:50:21 GMT-0500 (Central Daylight Time). All time data, including time zone information, will be stripped from the date." }), /* @__PURE__ */ e("h3", { children: "Color Fields" }), /* @__PURE__ */ e("p", { children: "A color formatted as CSS hexadecimal RGB code, rgb, hls or hlv expression, or a named color. All variants with an alpha value are also supported. Examples: #00ffee, rgb(0, 153, 255), hsla(204, 100%, 50%, 0.5), blue, darkgreen, rebeccapurple." }), /* @__PURE__ */ e("h3", { children: "Toggle Fields" }), /* @__PURE__ */ e("p", { children: 'A boolean value. Y, yes, TRUE, 1 will be interpreted as the toggle being "Yes", all other values will be "No". ' }), /* @__PURE__ */ e("h2", { children: "Prepare your CMS Collection" }), /* @__PURE__ */ e("p", { children: "Here is a checklist to prepare your CMS collection for importing." }), /* @__PURE__ */ t("ol", { children: [/* @__PURE__ */ e("li", { children: /* @__PURE__ */ t("p", { children: ["Verify each field/column in your CSV has a matching field in your CMS collection with the ", /* @__PURE__ */ e("em", { children: "same name." })] }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ e("p", { children: 'Include a unique field for each item, often named "Slug"' }) }), /* @__PURE__ */ e("li", { children: /* @__PURE__ */ t("p", { children: ["Verify that your data types match ", /* @__PURE__ */ e("em", { children: "(eg. a CMS Date field for a date field in your data)" })] }) })] }), /* @__PURE__ */ e("p", { children: /* @__PURE__ */ t("em", { children: ["Tip: Framer uses your Slug field to identify each item, and will use it to update that item with repeat imports.", /* @__PURE__ */ e("br", {})] }) }), /* @__PURE__ */ e("h2", { children: "Import your CSV file" }), /* @__PURE__ */ t("p", { children: ['You can find the Import feature by going to the CMS in your project, and clicking "Import" in the toolbar. From there, you can select your CSV file for importing. You may also drag & drop your CSV file directly into the CMS collection interface.', /* @__PURE__ */ e("br", {}), /* @__PURE__ */ e("br", {}), /* @__PURE__ */ t("em", { children: ["Tip: Importing supports Undo / Redo actions. If you're not happy with the import, you can simply undo the change with ", /* @__PURE__ */ e("strong", { children: "CMD+Z" }), " on MacOS or ", /* @__PURE__ */ e("strong", { children: "CTRL + Z" }), " on Windows. Redo will not re-run the import, but instantly apply the changes to the collection."] })] }), /* @__PURE__ */ e("h2", { children: "Updating or Re-Importing" }), /* @__PURE__ */ e("p", { children: "To update your content, you can import into the same collection again. If any item in the new import has a slug field that matches one of the items in your collection, you will be able to update it or skip importing it again." })] });
var richText4 = /* @__PURE__ */ t(n.Fragment, { children: [/* @__PURE__ */ e("h3", { children: "Choose Compelling Topics" }), /* @__PURE__ */ e("p", { children: "Use analytics tools to understand demographic data and user behavior. Tailor your content to address audience needs and interests, solving their specific problems. Conduct keyword research with tools like Google Keyword Planner or SEMrush. Analyze industry trends and competitors to select relevant and trending topics that improve SEO. Utilize headline analyzers like CoSchedule's Headline Analyzer. Craft titles that are clear, specific, and contain high-ranking keywords. Use power words to increase click-through rates." }), /* @__PURE__ */ e("h3", { children: "Organize Your Content" }), /* @__PURE__ */ e("p", { children: "Implement a clear structure using HTML tags for headings (H1, H2, H3) and lists (<ul>, <ol>). This enhances readability and SEO. Leverage CSS for formatting to improve UX. Embed high-quality images, infographics, charts, and graphs. Use Framer for creating visuals and optimize them with alt text for SEO. Ensure they are mobile-responsive. Place keywords naturally within the content, especially in headings and subheadings. Optimize meta descriptions, image alt texts, and use internal and external links." }), /* @__PURE__ */ e("h3", { children: "Pagination and SEO" }), /* @__PURE__ */ e("p", { children: "Consider adding pagination for extensive content lists, enhancing performance by reducing load times and improving user experience by making large amounts of content more readable and navigable. Additionally, pagination benefits SEO by facilitating easier search engine crawling and reducing bounce rates. By selecting a list of content coming from the blog, you can click the blue plus icon at the bottom to add infinite scrolling or a load more button. If you add pagination with infinite scrolling, try to avoid positioning layouts like pivots and footers below the loading content. This will help minimize layout shifts, thus not harming SEO." }), /* @__PURE__ */ e("h3", { children: "Monitor Performance" }), /* @__PURE__ */ e("p", { children: "Utilize the built-in Framer analytics to track performance metrics and adjust content strategy based on data insights. By combining these best practices with technical best techniques, you can create a blog that not only engages and informs but also performs well in search rankings and user engagement. Happy blogging!" })] });
var __FramerMetadata__ = { "exports": { "richText1": { "type": "variable", "annotations": { "framerContractVersion": "1" } }, "richText3": { "type": "variable", "annotations": { "framerContractVersion": "1" } }, "richText4": { "type": "variable", "annotations": { "framerContractVersion": "1" } }, "richText2": { "type": "variable", "annotations": { "framerContractVersion": "1" } }, "richText": { "type": "variable", "annotations": { "framerContractVersion": "1" } }, "__FramerMetadata__": { "type": "variable" } } };
export {
  __FramerMetadata__,
  richText,
  richText1,
  richText2,
  richText3,
  richText4
};
