// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 080b0b6d577bdc21 "Unframer Simplicity demo", do not edit manually */
// /:https://framerusercontent.com/modules/i2Kbb6L8ypMTOu0nc9OS/Y2nkxdMK3gmv1x5wEWKt/voPlJ06tR.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, Link, RichText, SVG, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var enabledGestures = { tF9KI8EJp: { hover: true } };
var cycleOrder = ["tF9KI8EJp", "MGKQN1HLw", "HMPy__2lP"];
var serializationHash = "framer-1I3kW";
var variantClassNames = { HMPy__2lP: "framer-v-d4h90h", MGKQN1HLw: "framer-v-1s4h0wt", tF9KI8EJp: "framer-v-hb2gli" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants === null || variants === void 0 ? void 0 : variants.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value !== null && value !== void 0 ? value : config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Default: "tF9KI8EJp", Mobile: "HMPy__2lP", Selected: "MGKQN1HLw" };
var getProps = ({ arrow, height, id, link, newTab, tap, title, width, ...props }) => {
  var _ref, _humanReadableVariantMap_props_variant, _ref1;
  return { ...props, FYTgjS55T: tap !== null && tap !== void 0 ? tap : props.FYTgjS55T, hYoSUJrtV: arrow !== null && arrow !== void 0 ? arrow : props.hYoSUJrtV, l_uXsrugr: newTab !== null && newTab !== void 0 ? newTab : props.l_uXsrugr, qsy89vfHT: link !== null && link !== void 0 ? link : props.qsy89vfHT, Rm4iGSliJ: (_ref = title !== null && title !== void 0 ? title : props.Rm4iGSliJ) !== null && _ref !== void 0 ? _ref : "Mockups", variant: (_ref1 = (_humanReadableVariantMap_props_variant = humanReadableVariantMap[props.variant]) !== null && _humanReadableVariantMap_props_variant !== void 0 ? _humanReadableVariantMap_props_variant : props.variant) !== null && _ref1 !== void 0 ? _ref1 : "tF9KI8EJp" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const { style, className, layoutId, variant, Rm4iGSliJ, qsy89vfHT, l_uXsrugr, FYTgjS55T, hYoSUJrtV, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "tF9KI8EJp", enabledGestures, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTap1onklxq = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (FYTgjS55T) {
      const res = await FYTgjS55T(...args);
      if (res === false) return false;
    }
  });
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const sharedStyleClassNames = [];
  const componentViewport = useComponentViewport();
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(Link, { href: qsy89vfHT, openInNewTab: l_uXsrugr, smoothScroll: true, children: /* @__PURE__ */ _jsxs(motion.a, { ...restProps, ...gestureHandlers, className: `${cx(serializationHash, ...sharedStyleClassNames, "framer-hb2gli", className, classNames)} framer-18ktgpy`, "data-framer-name": "Default", "data-highlight": true, layoutDependency, layoutId: "tF9KI8EJp", onTap: onTap1onklxq, ref: ref !== null && ref !== void 0 ? ref : ref1, style: { backgroundColor: "rgba(255, 255, 255, 0)", borderBottomLeftRadius: 8, borderBottomRightRadius: 8, borderTopLeftRadius: 8, borderTopRightRadius: 8, boxShadow: "0px 0px 0px 1px rgba(255, 255, 255, 0)", ...style }, variants: { "tF9KI8EJp-hover": { backgroundColor: "rgba(255, 255, 255, 0.05)", boxShadow: "none" }, MGKQN1HLw: { backgroundColor: "rgba(255, 255, 255, 0.05)", boxShadow: "none" } }, ...addPropertyOverrides({ "tF9KI8EJp-hover": { "data-framer-name": void 0 }, HMPy__2lP: { "data-framer-name": "Mobile" }, MGKQN1HLw: { "data-framer-name": "Selected" } }, baseVariant, gestureVariant), children: [/* @__PURE__ */ _jsx(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.p, { style: { "--font-selector": "RlM7U2F0b3NoaS1tZWRpdW0=", "--framer-font-family": '"Satoshi", "Satoshi Placeholder", sans-serif', "--framer-font-size": "14px", "--framer-font-weight": "500", "--framer-letter-spacing": "-0.02em", "--framer-text-alignment": "left", "--framer-text-color": "var(--extracted-r6o4lv, var(--token-9c4db272-3e6f-4bdb-870d-13efb9df1386, rgb(255, 255, 255)))" }, children: "Mockups" }) }), className: "framer-tswga5", fonts: ["FS;Satoshi-medium"], layoutDependency, layoutId: "tsaTHl4Kx", style: { "--extracted-r6o4lv": "var(--token-9c4db272-3e6f-4bdb-870d-13efb9df1386, rgb(255, 255, 255))", "--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline", "--framer-paragraph-spacing": "0px" }, text: Rm4iGSliJ, verticalAlignment: "top", withExternalLayout: true, ...addPropertyOverrides({ HMPy__2lP: { children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.p, { style: { "--font-selector": "RlM7U2F0b3NoaS1tZWRpdW0=", "--framer-font-family": '"Satoshi", "Satoshi Placeholder", sans-serif', "--framer-font-size": "14px", "--framer-font-weight": "500", "--framer-letter-spacing": "-0.02em", "--framer-line-height": "1.5em", "--framer-text-alignment": "left", "--framer-text-color": "var(--extracted-r6o4lv, var(--token-9c4db272-3e6f-4bdb-870d-13efb9df1386, rgb(255, 255, 255)))" }, children: "Mockups" }) }) } }, baseVariant, gestureVariant) }), hYoSUJrtV && /* @__PURE__ */ _jsx(SVG, { className: "framer-tu7w4y", "data-framer-name": "Icon", fill: "rgb(255, 255, 255)", intrinsicHeight: 32, intrinsicWidth: 32, layoutDependency, layoutId: "mmfK2Ybii", svg: '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 256 256"><path d="m213.66 101.66-80 80a8 8 0 0 1-11.32 0l-80-80a8 8 0 0 1 11.32-11.32L128 164.69l74.34-74.35a8 8 0 0 1 11.32 11.32Z"/></svg>', withExternalLayout: true })] }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-1I3kW.framer-18ktgpy, .framer-1I3kW .framer-18ktgpy { display: block; }", ".framer-1I3kW.framer-hb2gli { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: visible; padding: 8px 14px 8px 14px; position: relative; text-decoration: none; width: min-content; }", ".framer-1I3kW .framer-tswga5 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }", ".framer-1I3kW .framer-tu7w4y { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 16px); position: relative; width: 16px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-1I3kW.framer-hb2gli { gap: 0px; } .framer-1I3kW.framer-hb2gli > * { margin: 0px; margin-left: calc(8px / 2); margin-right: calc(8px / 2); } .framer-1I3kW.framer-hb2gli > :first-child { margin-left: 0px; } .framer-1I3kW.framer-hb2gli > :last-child { margin-right: 0px; } }", ".framer-1I3kW.framer-v-d4h90h.framer-hb2gli { justify-content: flex-start; padding: 4px 0px 4px 0px; }"];
var FramervoPlJ06tR = withCSS(Component, css, "framer-1I3kW");
var stdin_default = FramervoPlJ06tR;
FramervoPlJ06tR.displayName = "Navigation/Link";
FramervoPlJ06tR.defaultProps = { height: 33, width: 83.5 };
addPropertyControls(FramervoPlJ06tR, { variant: { options: ["tF9KI8EJp", "MGKQN1HLw", "HMPy__2lP"], optionTitles: ["Default", "Selected", "Mobile"], title: "Variant", type: ControlType.Enum }, Rm4iGSliJ: { defaultValue: "Mockups", displayTextArea: false, title: "Title", type: ControlType.String }, qsy89vfHT: { title: "Link", type: ControlType.Link }, l_uXsrugr: { defaultValue: false, title: "New Tab", type: ControlType.Boolean }, FYTgjS55T: { title: "Tap", type: ControlType.EventHandler }, hYoSUJrtV: { defaultValue: false, title: "Arrow", type: ControlType.Boolean } });
addFonts(FramervoPlJ06tR, [{ explicitInter: true, fonts: [{ family: "Satoshi", source: "fontshare", style: "normal", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/P2LQKHE6KA6ZP4AAGN72KDWMHH6ZH3TA/ZC32TK2P7FPS5GFTL46EU6KQJA24ZYDB/7AHDUZ4A7LFLVFUIFSARGIWCRQJHISQP.woff2", weight: "500" }] }], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
