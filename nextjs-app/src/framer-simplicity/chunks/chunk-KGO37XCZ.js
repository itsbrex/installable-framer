// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 080b0b6d577bdc21 "Unframer Simplicity demo", do not edit manually */
import {
  Icon
} from "./chunk-BTSBQWPZ.js";

// /:https://framerusercontent.com/modules/y1HUnr2njqcQXKEp2acO/Rnu0jYgaRQbPcofxjZtQ/t27IKw22u.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, getFonts, getPropertyControls, RichText, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var PhosphorFonts = getFonts(Icon);
var PhosphorControls = getPropertyControls(Icon);
var serializationHash = "framer-Qk5gp";
var variantClassNames = { oCRcmI9DN: "framer-v-takl8d" };
var transition1 = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value !== null && value !== void 0 ? value : config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var getProps = ({ height, icon, iconColor, id, title, width, ...props }) => {
  var _ref, _ref1, _ref2;
  return { ...props, AoWx0Fyus: (_ref = iconColor !== null && iconColor !== void 0 ? iconColor : props.AoWx0Fyus) !== null && _ref !== void 0 ? _ref : "var(--token-a0b108d1-905f-48b6-9b39-89b275654751, rgb(252, 252, 250))", mzKpE2hfI: (_ref1 = title !== null && title !== void 0 ? title : props.mzKpE2hfI) !== null && _ref1 !== void 0 ? _ref1 : "Submit Unlimited Requests", TyFhmBkMH: (_ref2 = icon !== null && icon !== void 0 ? icon : props.TyFhmBkMH) !== null && _ref2 !== void 0 ? _ref2 : "CheckCircle" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Variants = motion.create(React.Fragment);
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const { style, className, layoutId, variant, mzKpE2hfI, TyFhmBkMH, AoWx0Fyus, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ defaultVariant: "oCRcmI9DN", variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const componentViewport = useComponentViewport();
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsxs(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-takl8d", className, classNames), "data-framer-name": "Variant 1", layoutDependency, layoutId: "oCRcmI9DN", ref: ref !== null && ref !== void 0 ? ref : ref1, style: { ...style }, children: [/* @__PURE__ */ _jsx(ComponentViewportProvider, { children: /* @__PURE__ */ _jsx(motion.div, { className: "framer-1tpnr9a-container", layoutDependency, layoutId: "fDD0yYomo-container", children: /* @__PURE__ */ _jsx(Icon, { color: AoWx0Fyus, height: "100%", iconSearch: "House", iconSelection: TyFhmBkMH, id: "fDD0yYomo", layoutId: "fDD0yYomo", mirrored: false, selectByList: true, style: { height: "100%", width: "100%" }, weight: "regular", width: "100%" }) }) }), /* @__PURE__ */ _jsx(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.h1, { style: { "--font-selector": "RlM7U2F0b3NoaS1tZWRpdW0=", "--framer-font-family": '"Satoshi", "Satoshi Placeholder", sans-serif', "--framer-font-weight": "500", "--framer-letter-spacing": "-0.02em", "--framer-line-height": "1em", "--framer-text-alignment": "left", "--framer-text-color": "var(--extracted-gdpscs, var(--token-a47e5f39-ab8e-4e9f-95d6-dca87be48225, rgb(255, 255, 255)))" }, children: "Submit Unlimited Requests" }) }), className: "framer-1fes1ow", fonts: ["FS;Satoshi-medium"], layoutDependency, layoutId: "lirCtXsGY", style: { "--extracted-gdpscs": "var(--token-a47e5f39-ab8e-4e9f-95d6-dca87be48225, rgb(255, 255, 255))", "--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline" }, text: mzKpE2hfI, verticalAlignment: "top", withExternalLayout: true })] }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-Qk5gp.framer-1cy4g6e, .framer-Qk5gp .framer-1cy4g6e { display: block; }", ".framer-Qk5gp.framer-takl8d { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }", ".framer-Qk5gp .framer-1tpnr9a-container { flex: none; height: 18px; position: relative; width: 18px; }", ".framer-Qk5gp .framer-1fes1ow { flex: none; height: auto; position: relative; white-space: pre; width: auto; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-Qk5gp.framer-takl8d { gap: 0px; } .framer-Qk5gp.framer-takl8d > * { margin: 0px; margin-left: calc(8px / 2); margin-right: calc(8px / 2); } .framer-Qk5gp.framer-takl8d > :first-child { margin-left: 0px; } .framer-Qk5gp.framer-takl8d > :last-child { margin-right: 0px; } }"];
var Framert27IKw22u = withCSS(Component, css, "framer-Qk5gp");
var stdin_default = Framert27IKw22u;
Framert27IKw22u.displayName = "Elements/Feature";
Framert27IKw22u.defaultProps = { height: 18, width: 211 };
addPropertyControls(Framert27IKw22u, { mzKpE2hfI: { defaultValue: "Submit Unlimited Requests", displayTextArea: false, title: "Title", type: ControlType.String }, TyFhmBkMH: (PhosphorControls === null || PhosphorControls === void 0 ? void 0 : PhosphorControls["iconSelection"]) && { ...PhosphorControls["iconSelection"], defaultValue: "CheckCircle", description: void 0, hidden: void 0, title: "Icon" }, AoWx0Fyus: { defaultValue: 'var(--token-a0b108d1-905f-48b6-9b39-89b275654751, rgb(252, 252, 250)) /* {"name":"Heading"} */', title: "Icon Color", type: ControlType.Color } });
addFonts(Framert27IKw22u, [{ explicitInter: true, fonts: [{ family: "Satoshi", source: "fontshare", style: "normal", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/P2LQKHE6KA6ZP4AAGN72KDWMHH6ZH3TA/ZC32TK2P7FPS5GFTL46EU6KQJA24ZYDB/7AHDUZ4A7LFLVFUIFSARGIWCRQJHISQP.woff2", weight: "500" }] }, ...PhosphorFonts], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
