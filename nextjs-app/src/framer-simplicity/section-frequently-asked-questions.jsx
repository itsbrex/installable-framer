// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 080b0b6d577bdc21 "Unframer Simplicity demo", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Tablet' | 'Phone' // Variant
}} Props

 */
import { stdin_default as stdin_default2 } from "./chunks/chunk-3VABVIZ6.js";
import { className, css, fonts } from "./chunks/chunk-BEKPESE7.js";
import { stdin_default } from "./chunks/chunk-U2BTSRYM.js";
import "./chunks/chunk-ZKAXZ4P5.js";
import { routes } from "./chunks/chunk-HEB6EHGG.js";

// virtual:section-frequently-asked-questions
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/3N3NXszYbBUMGs3WxgYl/ZWrjalRRHKaIzOV6c1fg/WirOdcJBs.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	getFonts,
	getFontsFromSharedStyle,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var ElementsBadgeFonts = getFonts(stdin_default);
var ElementsFAQFonts = getFonts(stdin_default2);
var cycleOrder = ["g_GAoicEt", "gFvLeQTQg", "eHhGnXfVc"];
var serializationHash = "framer-7bLpf";
var variantClassNames = {
	eHhGnXfVc: "framer-v-1bn34k5",
	g_GAoicEt: "framer-v-1fmhf81",
	gFvLeQTQg: "framer-v-1lwts0v",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var humanReadableVariantMap = {
	Desktop: "g_GAoicEt",
	Phone: "eHhGnXfVc",
	Tablet: "gFvLeQTQg",
};
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "g_GAoicEt",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Variants = motion.create(React.Fragment);
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "g_GAoicEt",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1fmhf81",
							className2,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"g_GAoicEt"}
						ref={ref ?? ref1}
						style={{
							backgroundColor:
								"var(--token-f4cf9e3e-da35-4e33-897c-29a30a250c5f, rgb(0, 0, 0))",
							...style,
						}}
						{...addPropertyOverrides(
							{
								eHhGnXfVc: {
									"data-framer-name": "Phone",
								},
								gFvLeQTQg: {
									"data-framer-name": "Tablet",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.div
							className={"framer-14hekom"}
							data-framer-name={"Container"}
							layoutDependency={layoutDependency}
							layoutId={"bXF983yN_"}
						>
							<motion.div
								className={"framer-1jk17j8"}
								data-framer-name={"Text"}
								layoutDependency={layoutDependency}
								layoutId={"Lvh8BctKF"}
							>
								<ComponentViewportProvider
									height={40}
									y={
										(componentViewport?.y || 0) +
										80 +
										(((componentViewport?.height || 886) - 160 - 789.5) / 2 +
											0 +
											0) +
										0 +
										0 +
										0 +
										0
									}
									{...addPropertyOverrides(
										{
											eHhGnXfVc: {
												y:
													(componentViewport?.y || 0) +
													80 +
													(((componentViewport?.height || 1094) - 160 - 773) /
														2 +
														0 +
														0) +
													0 +
													0 +
													0 +
													0,
											},
											gFvLeQTQg: {
												y:
													(componentViewport?.y || 0) +
													80 +
													(((componentViewport?.height || 902) - 160 - 784) /
														2 +
														0 +
														0) +
													0 +
													0 +
													0 +
													0,
											},
										},
										baseVariant,
										gestureVariant,
									)}
								>
									<motion.div
										className={"framer-1jguhc9-container"}
										layoutDependency={layoutDependency}
										layoutId={"XE1xrb0jH-container"}
									>
										{_jsx(stdin_default, {
											D_QyhowU2: "Troubleshooting",
											height: "100%",
											id: "XE1xrb0jH",
											layoutId: "XE1xrb0jH",
											variant: "ih1f0O9Of",
											width: "100%",
										})}
									</motion.div>
								</ComponentViewportProvider>
								<RichText
									__fromCanvasComponent={true}
									className={"framer-17uuk4a"}
									fonts={["FS;Satoshi-medium", "GF;Instrument Serif-italic"]}
									layoutDependency={layoutDependency}
									layoutId={"mkgMlNQ0r"}
									style={{
										"--extracted-1of0zx5":
											"var(--token-a47e5f39-ab8e-4e9f-95d6-dca87be48225, rgb(255, 255, 255))",
										"--framer-link-text-color": "rgb(0, 153, 255)",
										"--framer-link-text-decoration": "underline",
									}}
									verticalAlignment={"top"}
									withExternalLayout={true}
									{...addPropertyOverrides(
										{
											eHhGnXfVc: {
												children: (
													<React.Fragment>
														<motion.h2
															style={{
																"--font-selector": "RlM7U2F0b3NoaS1tZWRpdW0=",
																"--framer-font-family":
																	'"Satoshi", "Satoshi Placeholder", sans-serif',
																"--framer-font-size": "40px",
																"--framer-font-weight": "500",
																"--framer-letter-spacing": "-0.04em",
																"--framer-line-height": "1.1em",
																"--framer-text-alignment": "center",
																"--framer-text-color":
																	"var(--extracted-1of0zx5, var(--token-a47e5f39-ab8e-4e9f-95d6-dca87be48225, rgb(255, 255, 255)))",
															}}
														>
															{"Everything you "}
															<motion.span
																style={{
																	"--font-selector":
																		"R0Y7SW5zdHJ1bWVudCBTZXJpZi1pdGFsaWM=",
																	"--framer-font-family":
																		'"Instrument Serif", "Instrument Serif Placeholder", serif',
																	"--framer-font-style": "italic",
																	"--framer-font-weight": "400",
																	"--framer-letter-spacing": "0em",
																}}
															>
																{"need"}
															</motion.span>
															{" to know."}
														</motion.h2>
													</React.Fragment>
												),
											},
											gFvLeQTQg: {
												children: (
													<React.Fragment>
														<motion.h2
															style={{
																"--font-selector": "RlM7U2F0b3NoaS1tZWRpdW0=",
																"--framer-font-family":
																	'"Satoshi", "Satoshi Placeholder", sans-serif',
																"--framer-font-size": "50px",
																"--framer-font-weight": "500",
																"--framer-letter-spacing": "-0.04em",
																"--framer-line-height": "1.1em",
																"--framer-text-alignment": "center",
																"--framer-text-color":
																	"var(--extracted-1of0zx5, var(--token-a47e5f39-ab8e-4e9f-95d6-dca87be48225, rgb(255, 255, 255)))",
															}}
														>
															{"Everything you "}
															<motion.span
																style={{
																	"--font-selector":
																		"R0Y7SW5zdHJ1bWVudCBTZXJpZi1pdGFsaWM=",
																	"--framer-font-family":
																		'"Instrument Serif", "Instrument Serif Placeholder", serif',
																	"--framer-font-style": "italic",
																	"--framer-font-weight": "400",
																	"--framer-letter-spacing": "0em",
																}}
															>
																{"need"}
															</motion.span>
															{" to know."}
														</motion.h2>
													</React.Fragment>
												),
											},
										},
										baseVariant,
										gestureVariant,
									)}
								>
									<React.Fragment>
										<motion.h2
											style={{
												"--font-selector": "RlM7U2F0b3NoaS1tZWRpdW0=",
												"--framer-font-family":
													'"Satoshi", "Satoshi Placeholder", sans-serif',
												"--framer-font-size": "55px",
												"--framer-font-weight": "500",
												"--framer-letter-spacing": "-0.04em",
												"--framer-line-height": "1.1em",
												"--framer-text-alignment": "center",
												"--framer-text-color":
													"var(--extracted-1of0zx5, var(--token-a47e5f39-ab8e-4e9f-95d6-dca87be48225, rgb(255, 255, 255)))",
											}}
										>
											{"Everything you "}
											<motion.span
												style={{
													"--font-selector":
														"R0Y7SW5zdHJ1bWVudCBTZXJpZi1pdGFsaWM=",
													"--framer-font-family":
														'"Instrument Serif", "Instrument Serif Placeholder", serif',
													"--framer-font-style": "italic",
													"--framer-font-weight": "400",
													"--framer-letter-spacing": "0em",
												}}
											>
												{"need"}
											</motion.span>
											{" to know."}
										</motion.h2>
									</React.Fragment>
								</RichText>
								<RichText
									__fromCanvasComponent={true}
									className={"framer-gkx38y"}
									fonts={["Inter"]}
									layoutDependency={layoutDependency}
									layoutId={"W3U1mmH8F"}
									style={{
										"--framer-link-text-color": "rgb(0, 153, 255)",
										"--framer-link-text-decoration": "underline",
									}}
									verticalAlignment={"top"}
									withExternalLayout={true}
								>
									<React.Fragment>
										<motion.p
											className={"framer-styles-preset-1qe6evr"}
											data-styles-preset={"wHLHeTMJ0"}
											style={{
												"--framer-text-alignment": "center",
											}}
										>
											{
												"If you find any errors rendering your components, check these common troubleshooting steps."
											}
										</motion.p>
									</React.Fragment>
								</RichText>
							</motion.div>
							<ComponentViewportProvider
								height={458}
								width={"800px"}
								y={
									(componentViewport?.y || 0) +
									80 +
									(((componentViewport?.height || 886) - 160 - 789.5) / 2 +
										0 +
										0) +
									0 +
									331.5
								}
								{...addPropertyOverrides(
									{
										eHhGnXfVc: {
											width: `min(${componentViewport?.width || "100vw"} - 48px, 1200px)`,
											y:
												(componentViewport?.y || 0) +
												80 +
												(((componentViewport?.height || 1094) - 160 - 773) / 2 +
													0 +
													0) +
												0 +
												315,
										},
										gFvLeQTQg: {
											width: `min(${componentViewport?.width || "100vw"} - 64px, 1200px)`,
											y:
												(componentViewport?.y || 0) +
												80 +
												(((componentViewport?.height || 902) - 160 - 784) / 2 +
													0 +
													0) +
												0 +
												326,
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								<motion.div
									className={"framer-17jgz3n-container"}
									layoutDependency={layoutDependency}
									layoutId={"ho_0dLFJW-container"}
								>
									{_jsx(stdin_default2, {
										F6lM4exSR:
											"Absolutely. You can cancel or change your plan whenever you need\u2014no questions asked.",
										height: "100%",
										id: "ho_0dLFJW",
										IFjQjdWql:
											"What\u2019s the difference between Standard and Mastermind plans?",
										JuxOgtiro:
											"The Mastermind plan offers advanced features like custom categories, integrations, and priority support.",
										kao3Z3l7k:
											"Yes, all plans come with 24/7 email support, and the Mastermind plan includes priority support.",
										KjHOx49kL:
											"Simplicity is designed for Mac and syncs across all your devices, so you can access your tasks anywhere.",
										layoutId: "ho_0dLFJW",
										mDV6PtA6K: "Can I cancel my plan anytime?",
										oRIOycR3Y:
											"Very easy! Install the app, add your first tasks, and start organizing within minutes.",
										pj8TaM0YQ:
											"Can I try Simplicity before committing to a plan?",
										pOWJFdPGf: "Is customer support available?",
										rawvYUUzX: "Is Simplicity available for all devices?",
										style: {
											width: "100%",
										},
										Tiiziaej8:
											"Yes, we offer a free trial so you can explore all the features before deciding.",
										tvNxOx7cw: "How easy is it to get started?",
										variant: "CHJ1QtQsP",
										width: "100%",
									})}
								</motion.div>
							</ComponentViewportProvider>
						</motion.div>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-7bLpf.framer-1koj04u, .framer-7bLpf .framer-1koj04u { display: block; }",
	".framer-7bLpf.framer-1fmhf81 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: visible; padding: 80px; position: relative; width: 1200px; }",
	".framer-7bLpf .framer-14hekom { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 64px; height: min-content; justify-content: center; max-width: 1200px; overflow: visible; padding: 0px; position: relative; width: 100%; }",
	".framer-7bLpf .framer-1jk17j8 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 16px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; }",
	".framer-7bLpf .framer-1jguhc9-container { flex: none; height: auto; position: relative; width: auto; }",
	".framer-7bLpf .framer-17uuk4a { flex: none; height: auto; max-width: 687px; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	".framer-7bLpf .framer-gkx38y { flex: none; height: auto; max-width: 760px; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	".framer-7bLpf .framer-17jgz3n-container { flex: none; height: auto; position: relative; width: 800px; z-index: 1; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-7bLpf.framer-1fmhf81, .framer-7bLpf .framer-14hekom, .framer-7bLpf .framer-1jk17j8 { gap: 0px; } .framer-7bLpf.framer-1fmhf81 > * { margin: 0px; margin-bottom: calc(24px / 2); margin-top: calc(24px / 2); } .framer-7bLpf.framer-1fmhf81 > :first-child, .framer-7bLpf .framer-14hekom > :first-child, .framer-7bLpf .framer-1jk17j8 > :first-child { margin-top: 0px; } .framer-7bLpf.framer-1fmhf81 > :last-child, .framer-7bLpf .framer-14hekom > :last-child, .framer-7bLpf .framer-1jk17j8 > :last-child { margin-bottom: 0px; } .framer-7bLpf .framer-14hekom > * { margin: 0px; margin-bottom: calc(64px / 2); margin-top: calc(64px / 2); } .framer-7bLpf .framer-1jk17j8 > * { margin: 0px; margin-bottom: calc(16px / 2); margin-top: calc(16px / 2); } }",
	".framer-7bLpf.framer-v-1lwts0v.framer-1fmhf81 { padding: 80px 32px 80px 32px; width: 810px; }",
	".framer-7bLpf.framer-v-1lwts0v .framer-17uuk4a { max-width: 609px; }",
	".framer-7bLpf.framer-v-1lwts0v .framer-gkx38y, .framer-7bLpf.framer-v-1bn34k5 .framer-gkx38y { --framer-text-wrap-override: balance; max-width: unset; }",
	".framer-7bLpf.framer-v-1lwts0v .framer-17jgz3n-container, .framer-7bLpf.framer-v-1bn34k5 .framer-17jgz3n-container { width: 100%; }",
	".framer-7bLpf.framer-v-1bn34k5.framer-1fmhf81 { padding: 80px 24px 80px 24px; width: 390px; }",
	".framer-7bLpf.framer-v-1bn34k5 .framer-17uuk4a { --framer-text-wrap: balance; max-width: unset; }",
	...css,
];
var FramerWirOdcJBs = withCSS(Component, css2, "framer-7bLpf");
var stdin_default3 = FramerWirOdcJBs;
FramerWirOdcJBs.displayName = "Section Frequently Asked Questions";
FramerWirOdcJBs.defaultProps = {
	height: 886,
	width: 1200,
};
addPropertyControls(FramerWirOdcJBs, {
	variant: {
		options: ["g_GAoicEt", "gFvLeQTQg", "eHhGnXfVc"],
		optionTitles: ["Desktop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
});
addFonts(
	FramerWirOdcJBs,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Satoshi",
					source: "fontshare",
					style: "normal",
					url: "https://framerusercontent.com/third-party-assets/fontshare/wf/P2LQKHE6KA6ZP4AAGN72KDWMHH6ZH3TA/ZC32TK2P7FPS5GFTL46EU6KQJA24ZYDB/7AHDUZ4A7LFLVFUIFSARGIWCRQJHISQP.woff2",
					weight: "500",
				},
				{
					family: "Instrument Serif",
					source: "google",
					style: "italic",
					url: "https://fonts.gstatic.com/s/instrumentserif/v4/jizHRFtNs2ka5fXjeivQ4LroWlx-6zATjnTNgNq55w.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...ElementsBadgeFonts,
		...ElementsFAQFonts,
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:section-frequently-asked-questions
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "eHhGnXfVc",
	md: "gFvLeQTQg",
	xl: "g_GAoicEt",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"080b0b6d577bdc210bd0cd32f7edde6108e985399928f17be1208fac1508931c"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default3, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders SectionFrequentlyAskedQuestionsFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"080b0b6d577bdc210bd0cd32f7edde6108e985399928f17be1208fac1508931c"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default3}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default3);
var section_frequently_asked_questions_default = ComponentWithRoot;
export { section_frequently_asked_questions_default as default };
